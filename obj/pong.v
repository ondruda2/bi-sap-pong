// File: obj/pong.v
// Generated by MyHDL 0.11
// Date: Tue May  5 12:05:58 2020


`timescale 1ns/10ps

module pong (
    clk,
    reset,
    switches,
    outvsync,
    outhsync,
    outcolor
);


input clk;
input reset;
input [15:0] switches;
output outvsync;
reg outvsync;
output outhsync;
reg outhsync;
output outcolor;
reg outcolor;

reg [5:0] y;
reg [6:0] x;
reg vblank;
reg pixclock_feedback;
reg [5:0] paddle_ry;
reg paddle_rai;
reg [5:0] paddle_ly;
reg paddle_lai;
reg move_enable;
reg [7:0] lsfr;
reg hblank;
reg colldone;
reg [6:0] bally;
reg [7:0] ballx;
reg signed [1:0] balldy;
reg signed [1:0] balldx;



always @(posedge clk) begin: PONG_RANDOM
    if (reset == 1) begin
        lsfr <= 0;
    end
    else begin
        lsfr[8-1:0] <= lsfr[8-1:1];
        lsfr[7] <= ((((lsfr[7] ^ lsfr[5]) ^ lsfr[4]) ^ lsfr[3]) ^ 1);
    end
end


always @(posedge clk) begin: PONG_MAINLOOP
    reg top;
    reg bottom;
    reg [16-1:0] tx;
    reg [16-1:0] ty;
    reg ball;
    reg [16-1:0] pt_ly;
    reg left;
    reg [16-1:0] pt_ry;
    reg right;
    reg net;
    reg lai;
    reg rai;
    if (reset == 1) begin
        colldone <= 0;
        pixclock_feedback <= 0;
        vblank <= 0;
        paddle_lai <= 0;
        outvsync <= 0;
        outcolor <= 0;
        balldy <= 1;
        ballx <= 50;
        paddle_ry <= 25;
        hblank <= 0;
        paddle_ly <= 25;
        outhsync <= 0;
        paddle_rai <= 0;
        x <= 0;
        bally <= 25;
        y <= 0;
        move_enable <= 0;
        balldx <= -1;
    end
    else begin
        pixclock_feedback <= 0;
        move_enable <= 0;
        if (1'b1) begin
            x <= (x + 1);
            if ((x == 99)) begin
                // End horizontally visible
                hblank <= 1;
            end
            if ((x == 100)) begin
                // Begin hsync pulse
                outhsync <= 1;
            end
            if ((x == 103)) begin
                // End hsync pulse
                outhsync <= 0;
            end
            if ((x == 104)) begin
                // End line
                // Start horizontally visible
                x <= 0;
                hblank <= 0;
                y <= (y + 1);
                pixclock_feedback <= 1;
                if ((y == 49)) begin
                    // End vertically visible
                    vblank <= 1;
                end
                if ((y == 50)) begin
                    // Begin vsync pulse
                    outvsync <= 1;
                end
                if ((y == 53)) begin
                    // End vsync pulse
                    outvsync <= 0;
                    move_enable <= 1;
                end
                if ((y == 54)) begin
                    // End frame
                    // Start vertically visible
                    y <= 0;
                    vblank <= 0;
                end
            end
            if (((!hblank) && (!vblank))) begin
                top = (y == 0);
                bottom = (y == 49);
                tx = ($signed({1'b0, x}) - $signed({1'b0, ballx}));
                ty = ($signed({1'b0, y}) - $signed({1'b0, bally}));
                ball = ((tx < 5) && (ty < 5));
                pt_ly = ($signed({1'b0, y}) - $signed({1'b0, paddle_ly}));
                left = ((x == 0) && (pt_ly < 12) && ((!paddle_lai) || (y[0] == 1)));
                pt_ry = ($signed({1'b0, y}) - $signed({1'b0, paddle_ry}));
                right = (($signed({1'b0, x}) == (100 - 1)) && (pt_ry < 12) && ((!paddle_rai) || (y[0] == 1)));
                net = ((x == (100 / 2)) && (y[2-1:0] == 0));
                outcolor <= (top || bottom || ball || left || right || net);
                if (((!colldone) && ball)) begin
                    if ((top || bottom)) begin
                        colldone <= 1;
                        balldy <= (-balldy);
                    end
                    else begin
                        if ((left || right)) begin
                            colldone <= 1;
                            balldx <= (-balldx);
                        end
                        if (left) begin
                            if ((y < (paddle_ly + (12 / 5)))) begin
                                balldy <= (-1);
                            end
                            else if (($signed({1'b0, y}) > ($signed({1'b0, paddle_ly}) + ((12 - (12 / 5)) - 3)))) begin
                                balldy <= 1;
                            end
                            else begin
                                balldy <= 0;
                            end
                        end
                        else if (right) begin
                            if ((y < (paddle_ry + (12 / 5)))) begin
                                balldy <= (-1);
                            end
                            else if (($signed({1'b0, y}) > ($signed({1'b0, paddle_ry}) + ((12 - (12 / 5)) - 3)))) begin
                                balldy <= 1;
                            end
                            else begin
                                balldy <= 0;
                            end
                        end
                    end
                end
            end
        end
        // Can be asserted multiple times per frame to allow faster movement
        if (move_enable) begin
            colldone <= 0;
            if (((ballx < (105 + 20)) || ($signed({1'b0, ballx}) > ((2 ** 8) - 20)))) begin
                ballx <= ($signed({1'b0, ballx}) + balldx);
                bally <= ($signed({1'b0, bally}) + balldy);
            end
            else begin
                ballx <= (105 / 2);
                bally <= (55 / 2);
                balldx <= lsfr[3] ? (-1) : 1;
                balldy <= lsfr[1] ? 1 : lsfr[2] ? (-1) : 0;
            end
            if (switches[13]) begin
                paddle_lai <= 1;
            end
            if (switches[12]) begin
                paddle_lai <= 0;
            end
            if (switches[3]) begin
                paddle_rai <= 1;
            end
            if (switches[2]) begin
                paddle_rai <= 0;
            end
            lai = (paddle_lai && (ballx < (100 / 2)));
            rai = (paddle_rai && (ballx > (100 / 2)));
            if ((((switches[15] && (!switches[14])) || (lai && (((bally + 5) - 2) < paddle_ly))) && (paddle_ly > 1))) begin
                paddle_ly <= (paddle_ly - 1);
            end
            if ((((switches[14] && (!switches[15])) || (lai && ($signed({1'b0, bally}) >= ((paddle_ly + 12) - 1)))) && ($signed({1'b0, paddle_ly}) < (50 - 12)))) begin
                paddle_ly <= (paddle_ly + 1);
            end
            if ((((switches[1] && (!switches[0])) || (rai && (((bally + 5) - 2) < paddle_ry))) && (paddle_ry > 1))) begin
                paddle_ry <= (paddle_ry - 1);
            end
            if ((((switches[0] && (!switches[1])) || (rai && ($signed({1'b0, bally}) >= ((paddle_ry + 12) - 1)))) && ($signed({1'b0, paddle_ry}) < (50 - 12)))) begin
                paddle_ry <= (paddle_ry + 1);
            end
        end
    end
end

endmodule
